CREATE OR ALTER PROCEDURE dbo.Build_Rollups
  @PeriodKey int
AS
BEGIN
  SET NOCOUNT ON;
  SET XACT_ABORT ON;

  DECLARE @PeriodDate date = DATEFROMPARTS(@PeriodKey / 100, @PeriodKey % 100, 1);

  /* ========= 1) Active metrics for the period ========= */
  IF OBJECT_ID('tempdb..#ActiveMetrics') IS NOT NULL DROP TABLE #ActiveMetrics;
  CREATE TABLE #ActiveMetrics (complianceitemid int PRIMARY KEY);

  INSERT #ActiveMetrics(complianceitemid)
  SELECT DISTINCT civ.complianceitemid
  FROM dbo.ComplianceItemVersions civ
  JOIN dbo.ComplianceItems ci ON ci.complianceitemid = civ.complianceitemid
  WHERE ci.active = 1
    AND civ.active = 1
    AND civ.effectivestartdate <= @PeriodDate
    AND (@PeriodDate < ISNULL(civ.effectiveenddate, '9999-12-31'));

  /* ========= 2) Roster for the period ========= */
  IF OBJECT_ID('tempdb..#Roster') IS NOT NULL DROP TABLE #Roster;
  CREATE TABLE #Roster (person_id int PRIMARY KEY);

  INSERT #Roster(person_id)
  SELECT DISTINCT person_id
  FROM dbo.Roster_Period
  WHERE period_key = @PeriodKey;

  /* ========= 3) Person → group map (bucket NULLs to -1) ========= */
  IF OBJECT_ID('tempdb..#PersonMap') IS NOT NULL DROP TABLE #PersonMap;
  CREATE TABLE #PersonMap (
    person_id int PRIMARY KEY,
    mpo_id    int NOT NULL,
    area_id   int NOT NULL,
    region_id int NOT NULL
  );

  /* Simple (non-SCD) map: one row per person in PersonOrg */
  INSERT #PersonMap(person_id, mpo_id, area_id, region_id)
  SELECT r.person_id,
         COALESCE(po.mpo_id,   -1) AS mpo_id,
         COALESCE(po.area_id,  -1) AS area_id,
         COALESCE(po.region_id,-1) AS region_id
  FROM #Roster r
  LEFT JOIN dbo.PersonOrg po
    ON po.person_id = r.person_id;

  /* ---- SCD point-in-time alternative (uncomment if PersonOrg is date-effective) ----
  TRUNCATE TABLE #PersonMap;
  INSERT #PersonMap(person_id, mpo_id, area_id, region_id)
  SELECT r.person_id,
         COALESCE(poi.mpo_id,   -1),
         COALESCE(poi.area_id,  -1),
         COALESCE(poi.region_id,-1)
  FROM #Roster r
  OUTER APPLY (
     SELECT TOP (1) po.*
     FROM dbo.PersonOrg po
     WHERE po.person_id = r.person_id
       AND po.startdate <= EOMONTH(@PeriodDate)
       AND (po.enddate  IS NULL OR po.enddate >= @PeriodDate)
     ORDER BY po.enddate DESC, po.startdate DESC
  ) poi;
  ---------------------------------------------------------------------------- */

  /* Distinct group lists (no NULLs because we bucketed to -1) */
  IF OBJECT_ID('tempdb..#Groups_MPO') IS NOT NULL DROP TABLE #Groups_MPO;
  CREATE TABLE #Groups_MPO (mpo_id int PRIMARY KEY);
  INSERT #Groups_MPO(mpo_id) SELECT DISTINCT mpo_id FROM #PersonMap;

  IF OBJECT_ID('tempdb..#Groups_Area') IS NOT NULL DROP TABLE #Groups_Area;
  CREATE TABLE #Groups_Area (area_id int PRIMARY KEY);
  INSERT #Groups_Area(area_id) SELECT DISTINCT area_id FROM #PersonMap;

  IF OBJECT_ID('tempdb..#Groups_Region') IS NOT NULL DROP TABLE #Groups_Region;
  CREATE TABLE #Groups_Region (region_id int PRIMARY KEY);
  INSERT #Groups_Region(region_id) SELECT DISTINCT region_id FROM #PersonMap;

  /* ========= 4) Pre-aggregate fact by group + metric (restricted to roster) ========= */
  IF OBJECT_ID('tempdb..#FactAgg_MPO') IS NOT NULL DROP TABLE #FactAgg_MPO;
  CREATE TABLE #FactAgg_MPO (
    mpo_id int NOT NULL,
    complianceitemid int NOT NULL,
    sum_wp decimal(19,6) NOT NULL,
    sum_w  decimal(19,6) NOT NULL,
    CONSTRAINT PK_FA_MPO PRIMARY KEY (mpo_id, complianceitemid)
  );

  INSERT #FactAgg_MPO (mpo_id, complianceitemid, sum_wp, sum_w)
  SELECT pm.mpo_id, ss.complianceitemid,
         SUM(ss.weighted_points), SUM(ss.weight_basis)
  FROM dbo.ScoreSnapshot ss
  JOIN #PersonMap pm ON pm.person_id = ss.person_id
  WHERE ss.period_key = @PeriodKey
  GROUP BY pm.mpo_id, ss.complianceitemid;

  IF OBJECT_ID('tempdb..#FactAgg_Area') IS NOT NULL DROP TABLE #FactAgg_Area;
  CREATE TABLE #FactAgg_Area (
    area_id int NOT NULL,
    complianceitemid int NOT NULL,
    sum_wp decimal(19,6) NOT NULL,
    sum_w  decimal(19,6) NOT NULL,
    CONSTRAINT PK_FA_Area PRIMARY KEY (area_id, complianceitemid)
  );

  INSERT #FactAgg_Area (area_id, complianceitemid, sum_wp, sum_w)
  SELECT pm.area_id, ss.complianceitemid,
         SUM(ss.weighted_points), SUM(ss.weight_basis)
  FROM dbo.ScoreSnapshot ss
  JOIN #PersonMap pm ON pm.person_id = ss.person_id
  WHERE ss.period_key = @PeriodKey
  GROUP BY pm.area_id, ss.complianceitemid;

  IF OBJECT_ID('tempdb..#FactAgg_Region') IS NOT NULL DROP TABLE #FactAgg_Region;
  CREATE TABLE #FactAgg_Region (
    region_id int NOT NULL,
    complianceitemid int NOT NULL,
    sum_wp decimal(19,6) NOT NULL,
    sum_w  decimal(19,6) NOT NULL,
    CONSTRAINT PK_FA_Region PRIMARY KEY (region_id, complianceitemid)
  );

  INSERT #FactAgg_Region (region_id, complianceitemid, sum_wp, sum_w)
  SELECT pm.region_id, ss.complianceitemid,
         SUM(ss.weighted_points), SUM(ss.weight_basis)
  FROM dbo.ScoreSnapshot ss
  JOIN #PersonMap pm ON pm.person_id = ss.person_id
  WHERE ss.period_key = @PeriodKey
  GROUP BY pm.region_id, ss.complianceitemid;

  /* ========= 5) Populate agg tables (groups × active metrics) ========= */

  -- MPO
  DELETE FROM dbo.Agg_MPO_Metric WHERE period_key = @PeriodKey;

  INSERT dbo.Agg_MPO_Metric (period_key, mpo_id, complianceitemid, sum_weighted_pts, total_weight)
  SELECT
    @PeriodKey,
    gm.mpo_id,
    am.complianceitemid,
    ISNULL(f.sum_wp, 0.0),
    ISNULL(f.sum_w,  0.0)
  FROM #Groups_MPO gm
  CROSS JOIN #ActiveMetrics am
  LEFT JOIN #FactAgg_MPO f
    ON f.mpo_id = gm.mpo_id
   AND f.complianceitemid = am.complianceitemid;

  -- Area
  DELETE FROM dbo.Agg_Area_Metric WHERE period_key = @PeriodKey;

  INSERT dbo.Agg_Area_Metric (period_key, area_id, complianceitemid, sum_weighted_pts, total_weight)
  SELECT
    @PeriodKey,
    ga.area_id,
    am.complianceitemid,
    ISNULL(f.sum_wp, 0.0),
    ISNULL(f.sum_w,  0.0)
  FROM #Groups_Area ga
  CROSS JOIN #ActiveMetrics am
  LEFT JOIN #FactAgg_Area f
    ON f.area_id = ga.area_id
   AND f.complianceitemid = am.complianceitemid;

  -- Region
  DELETE FROM dbo.Agg_Region_Metric WHERE period_key = @PeriodKey;

  INSERT dbo.Agg_Region_Metric (period_key, region_id, complianceitemid, sum_weighted_pts, total_weight)
  SELECT
    @PeriodKey,
    gr.region_id,
    am.complianceitemid,
    ISNULL(f.sum_wp, 0.0),
    ISNULL(f.sum_w,  0.0)
  FROM #Groups_Region gr
  CROSS JOIN #ActiveMetrics am
  LEFT JOIN #FactAgg_Region f
    ON f.region_id = gr.region_id
   AND f.complianceitemid = am.complianceitemid;
END
GO
